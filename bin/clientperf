#!/usr/bin/env ruby
require 'fileutils'
require File.dirname(__FILE__) << "/../lib/clientperf"

# For older Rails versions
# USAGE: clientperf [RAILS_ROOT]
rails_dir = ARGV[0] || Dir.pwd
plugin_dir = File.join(rails_dir, 'vendor/plugins')
unless File.directory?(plugin_dir)
  abort "clientperf: #{plugin_dir} does not exist; cannot install plugin"
end

FileUtils.rm_rf File.join(plugin_dir, 'clientperf') rescue nil

File.readlines(File.dirname(__FILE__) << "/../Manifest").each do |line|
  stub = line.strip
  origin = File.dirname(__FILE__) << "/../#{stub}"
  next if origin =~ /\/clientperf$/
  if File.file?(origin)
    destination = File.join(plugin_dir, 'clientperf', stub)
    FileUtils.mkdir_p File.dirname(destination)
    FileUtils.cp origin, destination
  end
end

generate = File.join(rails_dir, 'script/generate')
`#{generate} migration add_clientperf_tables`
migration = Dir[File.join(rails_dir, 'db/migrate/*_add_clientperf_tables.rb')].first

File.open(migration, 'w') do |file|
  file << <<-EOF
class AddClientperfTables < ActiveRecord::Migration
  def self.up
    create_table :clientperf_uris do |t|
      t.string :uri
      t.timestamps 
    end
    
    create_table :clientperf_results do |t|
      t.integer :clientperf_uri_id
      t.integer :milliseconds
      t.timestamps 
    end
  end

  def self.down
    drop_table :clientperf_uris
    drop_table :clientperf_results
  end
end
EOF
end

STDERR.puts "Installed clientperf (v#{Clientperf.version}) in vendor/plugins/clientperf"